create table goods(
id int unsigned primary key auto_increment not null,
name varchar(150) not null,
cate_name varchar(40) not null,
brand_name varchar(40) not null,
price decimal(10,3) not null default 0,
is_show bit not null default 1,
is_saleoff bit not null default 0
);

insert into goods values(0,'r510vc 15.6英寸笔记本','笔记本','华硕','3399',default,default);
insert into goods values(0,'y400n 14.0英寸笔记本电脑','笔记本','联想','4999',default,default);
insert into goods values(0,'g150th 15.6英寸游戏本','游戏本','雷神','8499',default,default);
insert into goods values(0,'x550cc 15.6英寸笔记本','笔记本','华硕','2799',default,default);
insert into goods values(0,'x240超极本','超极本','联想','4880',default,default);
insert into goods values(0,'u330p 13.3英寸超极本','超极本','联想','4299',default,default);
insert into goods values(0,'svp13226scb 触控超极本','超极本','索尼','7999',default,default);
insert into goods values(0,'ipad mini 7.9英寸平板电脑','平板电脑','苹果','1998',default,default);
insert into goods values(0,'ipad air 9.7英寸平板电脑','平板电脑','苹果','3388',default,default);
insert into goods values(0,'ipad mini 配备 retina 显示屏','平板电脑','苹果','2788',default,default);
insert into goods values(0,'ideacentre c340 20英寸一体电脑','台式机','联想','3499',default,default);
insert into goods values(0,'vostro 3800-r1206 台式电脑','台式机','戴尔','2899',default,default);
insert into goods values(0,'imac me086ch/a 21.5英寸一体电脑','台式机','苹果','9188',default,default);
insert into goods values(0,'at7-7414lp 台式电脑 linux )','台式机','宏碁','3699',default,default);
insert into goods values(0,'z220sff f4f06pa工作站','服务器/工作站','惠普','4288',default,default);
insert into goods values(0,'poweredge ii服务器','服务器/工作站','戴尔','5388',default,default);
insert into goods values(0,'mac pro专业级台式电脑','服务器/工作站','苹果','28888',default,default);
insert into goods values(0,'hmz-t3w 头戴显示设备','笔记本配件','索尼','6999',default,default);
insert into goods values(0,'商务双肩背包','笔记本配件','索尼','99',default,default);
insert into goods values(0,'x3250 m4机架式服务器','服务器/工作站','ibm','6888',default,default);
insert into goods values(0,'商务双肩背包','笔记本配件','索尼','99',default,default);



create table if not exists goods_cates(
id int unsigned primary key auto_increment,
name varchar(40) not null
);

select goods.name,new.cate_name,max(price) from 
(select cate_name,max(price) as new_price from goods group by cate_name) as new,goods 
where new.new_price=goods.price and new.cate_name=goods.cate_name;

select goods.name,new.cate_name,max(price) from 
(select cate_name,max(price) as new_price from goods group by cate_name) as new 
where new.new_price=goods.price and new.cate_name=goods.cate_name;

insert into goods_cates(name) select cate_name from goods group by cate_name;
update goods as g inner join goods_cates as c on g.cate_name=c.name set g.cate_name = c.id;
insert into goods_cates(name) values ('路由器'),('交换机'),('网卡');
insert into goods (name,cate_name,brand_name,price)   
values ('LaserJet Pro P1606dn 黑白激光打印机',12,4,'1849');
alter table goods change cate_name cate_id int unsigned not null;
delete from goods where id = 22;
alter table goods add foreign key(cate_id) references goods_cates(id);

create table if not exists goods_brands(
id int unsigned primary key auto_increment,
name varchar(40) not null) select brand_name as name from goods group by brand_name; 
update goods as g inner join goods_brands as gb on g.brand_name=gb.name set g.brand_name = gb.id;
alter table goods change brand_name brand_id int unsigned not null;
alter table goods add foreign key(brand_id) references goods_brands(id);
alter table goods drop foreign key goods_ibfk_1;
alter table goods drop foreign key goods_ibfk_2;

cs1.execute('''insert into goods_cates (name) values ("硬盘-new")''')
视图
select g.*,c.name as cate_name,b.name as brand_name from goods as g left join goods_cates as c on g.cate_id=c.id left join goods_brands as b on g.brand_id = b.id; 
create view v_goods_info as select g.*,c.name as cate_name,b.name as brand_name from goods as g left join goods_cates as c on g.cate_id=c.id left join goods_brands as b on g.brand_id = b.id; 
索引
create table test_index(title varchar(10));
set profiling = 1
sql语句
show profiles
create index title_index on test_index(title(10));
查看表里的所有索引
show index from 表名
show index fron test_index;
Mysql主从
1、ubantu上作为主服务器：mysqldump -uroot -p jing_dong >jd.sql
mysqldump -uroot -p --all-databases --lock-all-tables >~/python/master_db.sql
windows作为从服务器
将主服务器生成的master_db.sql放在C:\Program Files\MySQL\MySQL Server 8.0\bin目录下
找到windows mysql.exe(C:\Program Files\MySQL\MySQL Server 8.0\bin)
命令窗口在上述路径下还原操作
mysql -uliyongjin -p123456 <master_db.sql
现在主从服务器数据相同
2、主服务器操作（ubantu）
sudo vim /etc/mysql/mysql.conf.d/mysql.cnf
83,84取消注释
83行 service-id =1
重启服务器 sudo service mysql restart
3、从服务器操作(linux)
sudo vim /etc/mysql/mysql.conf.d/mysql.cnf
83行 service-id =2（不能和主服务器相同，一般取ip最后一位值）
84行注释
重启服务器 sudo service mysql restart
从服务器操作（windows）
C:\ProgramData\MySQL\MySQL Server 8.0
my.ini
service-id =2
打开windows服务管理
开始菜单中输入services.msc找到并运行
打开的服务管理中找到MYSQL57，重启该服务

4、登入主服务器上的mysql，在主服务器上建立一个用户主服务器上建立一个用户
mysql -uroot -pliyongjin
GRANT REPLICATION SLAVE ON *.* TO 'slave'@'%' identified by 'slave';
FLUSH PRIVILEGES;
5、进入从服务器的mysql
change master to master_host='主服务器ip地址',master_user='slave',master_password='slave',master_log_file='mysql-bin.000006',master_log_pos=590;
通过show master status;查看master_log_file，master_log_pos
change master to master_host='192.168.80.132',master_user='slave',master_password='slave',master_log_file='mysql-bin.000001',master_log_pos=590;

6、测试是否配置成功
从服务器mysql上操作
start slave;
show slave status;
Slave_ID_Running:Yes
Slave_SQL_Running:Yes 






